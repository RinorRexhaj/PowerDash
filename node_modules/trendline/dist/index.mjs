// src/index.ts
function getAverage(arr) {
  const total = arr.reduce((acc, c) => acc + c, 0);
  return total / arr.length;
}
function getSum(arr) {
  return arr.reduce((acc, c) => acc + c, 0);
}
function createTrend(data, xKey, yKey) {
  const xData = data.map((value) => value[xKey]);
  const yData = data.map((value) => value[yKey]);
  const xMean = getAverage(xData);
  const yMean = getAverage(yData);
  const xMinusxMean = xData.map((val) => val - xMean);
  const yMinusyMean = yData.map((val) => val - yMean);
  const xMinusxMeanSq = xMinusxMean.map((val) => Math.pow(val, 2));
  const xy = [];
  for (let x = 0; x < data.length; x++) {
    xy.push(xMinusxMean[x] * yMinusyMean[x]);
  }
  const xySum = getSum(xy);
  const b1 = xySum / getSum(xMinusxMeanSq);
  const b0 = yMean - b1 * xMean;
  return {
    slope: b1,
    yStart: b0,
    calcY: (x) => b0 + b1 * x
  };
}
var src_default = createTrend;
export {
  createTrend,
  src_default as default
};
//# sourceMappingURL=index.mjs.map