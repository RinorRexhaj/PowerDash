"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  createTrend: () => createTrend,
  default: () => src_default
});
module.exports = __toCommonJS(src_exports);
function getAverage(arr) {
  const total = arr.reduce((acc, c) => acc + c, 0);
  return total / arr.length;
}
function getSum(arr) {
  return arr.reduce((acc, c) => acc + c, 0);
}
function createTrend(data, xKey, yKey) {
  const xData = data.map((value) => value[xKey]);
  const yData = data.map((value) => value[yKey]);
  const xMean = getAverage(xData);
  const yMean = getAverage(yData);
  const xMinusxMean = xData.map((val) => val - xMean);
  const yMinusyMean = yData.map((val) => val - yMean);
  const xMinusxMeanSq = xMinusxMean.map((val) => Math.pow(val, 2));
  const xy = [];
  for (let x = 0; x < data.length; x++) {
    xy.push(xMinusxMean[x] * yMinusyMean[x]);
  }
  const xySum = getSum(xy);
  const b1 = xySum / getSum(xMinusxMeanSq);
  const b0 = yMean - b1 * xMean;
  return {
    slope: b1,
    yStart: b0,
    calcY: (x) => b0 + b1 * x
  };
}
var src_default = createTrend;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  createTrend
});
//# sourceMappingURL=index.js.map